(
"
Hand-made script for testing movie applet player.
(c) J Kyle Kelso 1999
"
(change-view (shot0.gif))
(change-cursor normal)
(change-comment "This example shows the construction of a simple
interactive program using the Haskell IO functions.")
(wait)

(change-comment "Using the Haskell monad 'do' syntax program can be
written:

    main = do
        putStr \"What is your name ? \"
        name <- getLine
        putStr (\"Hello \" ++ name)
")
(wait)

(change-comment "Without the monad syntax this would be a little more
complicated:

    main =
        putStr \"What is your name ? \" >>
        getLine >>= (\\name -> 
        putStr (\"Hello \" ++ name))
")
(wait)

(change-comment "The VFPE does not have the 'do' syntax but as we shall see
the tree layout goes a long way toward making the structure
of the monad expression clear.")
(wait)

(change-comment "We begin by making a LET binding that will form the top
level of our Haskell program.  We add a 'main' binding that
will be the program's entry point.")
(wait)

(mouse-sequence m 230 401 m 232 401 m 234 401 m 240 401 m 246 401 m 252 400 m 258 400 m 264 400 m 270 400 m 271 399 m 277 398 m 283 398 m 291 398 m 301 398 m 309 397 m 317 396 m 325 395 m 333 395 m 339 395 m 345 395 m 351 395 m 353 395 m 359 395 m 365 395 m 373 395 m 381 395 m 389 394 m 397 392 m 405 392 m 411 391 m 412 390 m 412 388 m 412 387 m 413 386 m 413 384 m 414 383 m 414 381 m 414 379 m 414 377 m 414 376 m 414 375 c 414 375)
(change-cursor grab)
(mouse-sequence m 413 375 m 412 375 m 411 375 m 409 374 m 408 372 m 406 371 m 400 369 m 390 367 m 380 359 m 364 349 m 346 335 m 328 325 m 312 317 m 298 311 m 286 310 m 276 304 m 266 298 m 254 290 m 242 280 m 228 270 m 212 258 m 196 248 m 178 236 m 164 226 m 150 220 m 140 214 m 134 212 m 128 210 m 126 204 m 120 202 m 114 196 m 108 188 m 102 182 m 100 176 m 98 174 m 92 172 m 90 170 m 84 164 m 78 158 m 76 156 m 74 155 m 73 154 m 72 153 m 71 151 m 70 149 m 68 143 m 66 141 m 64 139 m 58 137 m 56 131 m 54 130 m 52 129 m 51 128 m 50 128 m 50 127 m 49 126 m 48 125 m 47 124 m 46 122 m 44 116 m 42 115 m 41 113 m 40 113 m 39 112 m 38 110 m 37 109 m 36 108 m 35 108 m 34 107 c 34 107)
(change-view (shot1.gif))
(change-cursor normal)
(mouse-sequence m 35 107 m 35 106 m 36 106 m 36 105 m 37 105 m 38 105 m 39 104 m 40 104 m 41 104 m 42 104 m 43 104 m 44 104 m 45 104 m 46 104 m 47 104 m 48 104 m 49 104 m 50 104 m 52 104 c 52 104)
(change-view (shot1.gif shot2.gif))
(mouse-sequence m 53 104 m 54 104 m 56 104 m 58 104 m 60 104 m 62 104 m 64 105 m 66 105 m 72 105 m 78 105 m 84 105 m 92 106 m 102 106 m 112 106 m 124 106 m 138 106 m 152 107 m 166 107 m 182 107 m 196 107 m 210 107 m 222 107 m 234 108 m 246 108 m 258 108 m 270 108 m 282 108 m 296 108 m 310 108 m 324 114 m 334 114 m 346 114 m 358 115 m 370 115 m 382 115 m 394 115 m 406 115 m 418 115 m 430 115 m 440 115 m 450 115 m 458 115 m 464 115 m 470 115 m 476 114 m 482 114 m 490 113 m 498 112 m 504 111 m 512 110 m 520 108 m 528 107 m 536 105 m 544 104 m 552 103 m 560 103 m 568 102 m 576 101 m 578 99 m 580 98 m 582 97 m 584 95 m 590 94 m 592 92 m 594 91 m 596 89 m 597 88 m 598 87 m 598 86 m 598 85 m 598 84 m 598 83 m 598 82 m 598 80 m 598 79 m 598 77 m 599 75 m 600 73 m 601 72 m 601 71 m 602 70 m 603 69 m 603 68 m 604 67 m 605 67 m 606 66 c 606 66)
(change-view (shot1.gif shot3.gif))
(mouse-sequence m 606 67 m 606 73 m 607 74 m 607 80 m 607 82 m 608 83 m 608 84 m 609 86 m 610 87 m 611 89 m 612 90 m 612 92 m 613 92 m 613 93 m 614 95 m 615 96 m 616 97 m 616 99 m 617 100 m 617 101 m 618 103 m 618 104 m 618 105 m 619 107 m 619 108 m 619 109 c 619 109)
(change-view (shot4.gif))
(mouse-sequence m 618 109 m 616 110 m 614 110 m 612 112 m 606 112 m 600 112 m 594 112 m 588 112 m 580 112 m 572 112 m 564 112 m 554 112 m 544 112 m 534 112 m 524 112 m 514 112 m 504 112 m 494 112 m 486 112 m 476 112 m 466 112 m 454 112 m 442 112 m 432 112 m 420 112 m 410 112 m 400 112 m 390 112 m 380 112 m 368 112 m 356 112 m 342 111 m 330 111 m 318 111 m 306 110 m 294 109 m 282 109 m 268 109 m 252 108 m 238 108 m 224 108 m 210 108 m 198 108 m 186 108 m 176 108 m 164 108 m 154 108 m 142 108 m 132 108 m 122 108 m 114 108 m 106 108 m 98 108 m 90 108 m 82 108 m 74 108 m 64 108 m 54 108 m 46 108 m 38 108 m 32 108 m 26 108 m 24 108 m 22 108 m 16 108 m 14 108 m 13 108 m 14 108 m 16 108 m 18 108 m 19 107 m 21 107 m 22 106 m 23 106 m 25 106 m 27 106 m 28 105 m 30 105 m 32 105 m 34 104 m 36 104 m 37 104 m 37 103 m 38 102 m 39 102 m 39 101 c 39 101)
(change-view (shot5.gif))

(change-comment "OK, we know that the first thing the program wants
to do is print out the prompt string.  There's clearly
a sequence of IO actions, so let's start with the 
sequence operator.")
(wait)

(mouse-sequence m 45 103 m 46 105 m 48 106 m 54 114 m 62 120 m 68 126 m 76 128 m 84 136 m 92 144 m 100 150 m 108 152 m 116 160 m 124 168 m 134 174 m 146 182 m 156 192 m 168 200 m 180 208 m 192 216 m 204 222 m 214 230 m 224 238 m 234 246 m 244 254 m 256 262 m 268 270 m 280 280 m 292 290 m 302 300 m 314 310 m 324 320 m 334 328 m 344 338 m 352 346 m 358 354 m 364 360 m 370 366 m 372 372 m 378 374 m 380 380 m 382 386 m 388 388 m 390 394 m 396 400 m 397 402 m 399 404 m 400 406 m 401 407 m 403 409 m 409 415 m 415 417 m 421 423 m 427 429 m 429 430 m 431 430 m 431 431 m 433 437 m 435 443 m 441 445 m 443 451 m 445 452 m 447 454 m 449 455 m 451 456 m 453 458 m 455 459 m 456 459 m 457 460 m 459 462 m 460 463 c 460 463)
(change-view (shot6.gif))
(mouse-sequence m 460 461 m 460 460 m 460 458 m 460 456 m 460 450 m 460 448 m 460 442 m 460 434 m 461 428 m 462 422 m 463 416 m 464 410 m 466 404 m 467 398 m 469 396 m 470 390 m 471 384 m 473 382 m 475 380 m 476 378 m 478 372 m 480 370 m 486 368 m 487 366 m 489 365 m 490 363 m 492 362 m 494 360 m 495 358 m 497 357 m 498 356 m 499 355 m 500 354 m 501 354 m 501 352 m 502 352 m 503 351 m 503 350 m 505 348 m 506 347 m 507 346 m 507 344 m 508 343 m 509 342 m 510 340 m 510 339 m 511 337 m 512 335 m 513 333 m 514 332 m 514 331 m 514 330 m 514 329 m 514 328 m 514 327 m 514 326 m 514 325 m 514 324 m 514 323 c 514 323)
(change-cursor grab)
(mouse-sequence m 513 323 m 512 322 m 510 322 m 508 320 m 502 319 m 494 319 m 488 318 m 480 316 m 472 315 m 464 315 m 458 314 m 450 312 m 442 311 m 434 310 m 426 308 m 416 307 m 406 301 m 394 299 m 382 293 m 372 287 m 362 285 m 352 279 m 342 277 m 332 275 m 322 273 m 310 271 m 298 269 m 286 267 m 272 261 m 258 255 m 242 249 m 228 243 m 214 237 m 202 235 m 190 229 m 180 228 m 170 222 m 162 221 m 152 219 m 144 218 m 134 212 m 124 210 m 114 208 m 104 207 m 98 205 m 92 204 m 90 203 m 88 203 m 87 203 m 86 202 m 85 201 m 83 200 m 82 199 m 80 198 m 78 196 m 76 195 m 74 194 m 73 194 m 73 193 m 72 192 m 71 191 m 70 190 m 69 188 m 67 187 m 65 186 m 64 184 m 63 183 m 62 182 m 61 180 m 60 179 m 59 178 m 58 176 m 57 175 m 56 175 m 56 174 c 56 174)
(change-view (shot7.gif))
(change-cursor normal)
(change-comment "Note that the type of the operator's arguments are
both IO monad objects.")
(wait)

(mouse-sequence m 64 181 m 64 182 m 63 182 m 63 183 m 63 189 m 63 190 m 63 191 m 62 192 m 62 193 m 62 199 m 62 200 m 62 201)
(change-view (shot7a.gif))
(wait)

(change-view (shot7.gif))
(mouse-sequence m 62 206 m 63 206 m 64 206 m 65 206 m 66 206 m 67 206 m 68 206 m 70 206 m 71 206 m 72 206 m 73 206 m 74 206 m 76 206 m 78 206 m 80 206 m 82 206 m 84 206 m 86 206 m 88 206 m 89 206)
(change-view (shot7b.gif))
(wait)

(change-comment "We fill in the first action.")
(wait)

(change-view (shot7.gif))
(mouse-sequence m 97 211 m 98 211 m 100 212 m 102 213 m 104 214 m 106 216 m 108 217 m 110 218 m 116 219 m 122 219 m 130 225 m 136 226 m 144 232 m 152 233 m 160 234 m 168 236 m 176 238 m 184 240 m 194 242 m 202 244 m 210 246 m 220 252 m 228 258 m 236 260 m 246 266 m 256 272 m 264 274 m 272 280 m 280 286 m 288 288 m 296 294 m 306 300 m 314 308 m 324 314 m 332 322 m 342 328 m 350 336 m 358 344 m 366 350 m 376 356 m 384 358 m 392 364 m 400 370 m 408 371 m 414 377 m 420 378 m 426 380 m 432 381 m 434 382 m 436 383 m 438 385 m 440 386 m 446 386 m 448 388 m 450 390 m 452 391 m 454 391 m 456 392 m 457 392 m 463 394 m 464 394 m 470 395 m 472 401 m 478 401 m 484 402 m 486 404 m 488 405 m 490 406 m 492 407 m 494 409 m 500 410 m 506 416 m 512 417 m 518 423 m 524 424 m 530 426 m 532 427 m 534 427 c 534 427)
(change-cursor grab)
(mouse-sequence m 533 427 m 532 427 m 530 426 m 528 425 m 522 424 m 520 424 m 518 423 m 516 421 m 514 420 m 512 419 m 506 418 m 500 416 m 492 414 m 486 412 m 476 406 m 466 400 m 456 394 m 444 388 m 434 382 m 424 381 m 416 375 m 408 373 m 400 371 m 392 369 m 382 363 m 370 357 m 358 349 m 346 339 m 330 331 m 314 323 m 298 315 m 284 309 m 272 307 m 260 301 m 248 295 m 236 289 m 226 283 m 214 275 m 202 269 m 190 263 m 178 257 m 166 251 m 154 245 m 144 239 m 134 237 m 126 235 m 118 234 m 110 233 m 104 231 m 98 229 m 92 227 m 86 226 m 80 225 m 74 223 m 68 222 m 62 222 m 60 220 m 54 219 m 48 218 m 40 217 m 32 215 m 26 215 m 24 214 m 24 213 m 25 213 m 27 213 m 29 213 m 30 213 m 31 213 m 32 213 m 33 213 m 34 213 m 35 212 m 37 211 m 39 211 m 41 210 m 42 210 m 43 210 m 44 209 m 46 209 m 47 209 m 48 209 m 50 209 m 51 209 m 52 208 m 53 208 m 54 208 m 55 208 m 56 208 m 57 208 m 58 208 m 58 207 c 58 207)
(change-view (shot8.gif))
(change-cursor normal)
(mouse-sequence m 59 208 m 60 209 m 62 210 m 64 216 m 70 217 m 76 223 m 84 225 m 90 227 m 98 233 m 104 239 m 112 245 m 118 251 m 124 257 m 130 263 m 136 269 m 142 275 m 148 283 m 154 289 m 160 295 m 166 301 m 174 307 m 180 315 m 188 323 m 196 333 m 206 341 m 214 351 m 224 361 m 234 371 m 244 381 m 254 391 m 262 399 m 268 407 m 276 413 m 282 421 m 288 429 m 294 437 m 300 445 m 308 453 m 316 461 m 324 469 m 332 477 m 340 485 m 348 493 m 356 501 m 364 507 m 372 515 m 380 523 m 388 529 m 396 535 m 402 541 m 408 547 m 410 549 m 416 551 m 418 552 m 420 554 m 421 554 m 421 555 m 427 556 m 433 562 m 434 564 m 436 566 m 438 567 m 440 568 m 441 569 m 442 570 m 443 571 m 445 579 m 446 581 m 447 582 m 448 583 m 448 584 m 448 585 m 448 586 m 449 592 m 450 593 m 451 595 m 451 596 m 451 597 m 451 598 m 451 599 m 451 605 m 452 607 m 454 609 m 454 611 m 454 612 m 454 613 m 454 614 m 455 615 c 455 615)
(change-view (shot9.gif))
(change-cursor grab)
(mouse-sequence m 454 614 m 453 613 m 452 613 m 450 612 m 448 610 m 446 608 m 440 602 m 432 596 m 426 588 m 416 586 m 408 578 m 398 572 m 390 566 m 382 564 m 376 558 m 370 552 m 362 544 m 352 536 m 342 526 m 330 516 m 318 504 m 306 494 m 296 486 m 290 480 m 284 479 m 282 473 m 276 471 m 270 465 m 264 457 m 258 449 m 250 441 m 240 431 m 228 419 m 218 409 m 206 401 m 196 393 m 188 387 m 182 381 m 176 379 m 174 371 m 168 365 m 162 357 m 156 349 m 150 341 m 142 331 m 134 323 m 128 315 m 120 307 m 112 299 m 106 291 m 100 283 m 94 277 m 92 271 m 90 269 m 88 263 m 86 261 m 84 255 m 82 253 m 80 251 m 78 245 m 76 243 m 74 242 m 74 241 m 73 240 m 72 239 m 72 237 m 71 236 m 70 234 m 68 232 m 66 231 m 65 229 m 64 229 m 63 228 m 62 227 m 61 227 c 61 227)
(change-view (shot10.gif))
(change-cursor normal)

(change-comment "After the first action we still have two more
actions, so we'll need another sequence.  This
time, though, we will be using the value read
from the first of these IO actions, so we
use the 'bind' operator.")
(wait)

(mouse-sequence m 104 226 m 105 226 m 107 226 m 109 226 m 115 227 m 123 227 m 129 229 m 137 230 m 145 230 m 153 231 m 161 231 m 169 232 m 177 233 m 185 235 m 191 236 m 199 237 m 209 238 m 217 239 m 225 240 m 231 241 m 239 242 m 247 243 m 253 245 m 261 246 m 269 247 m 277 248 m 287 249 m 297 250 m 307 251 m 317 252 m 327 254 m 335 254 m 343 255 m 351 256 m 359 257 m 365 258 m 371 258 m 377 260 m 383 261 m 391 262 m 397 262 m 405 263 m 411 265 m 417 266 m 423 266 m 425 267 m 427 268 m 428 269 m 430 270 m 436 271 m 442 273 m 448 274 m 454 275 m 462 276 m 468 277 m 470 278 m 476 278 m 478 279 m 479 281 m 480 281 m 482 282 m 484 283 m 486 285 m 488 285 m 490 286 m 492 286 m 493 287 m 494 287 m 495 288 m 497 289 m 499 291 m 500 291 m 500 292 m 502 294 m 503 294 m 504 295 c 504 295)
(change-cursor grab)
(mouse-sequence m 503 295 m 501 295 m 499 295 m 493 294 m 487 294 m 479 292 m 471 291 m 461 290 m 451 288 m 443 287 m 437 286 m 431 284 m 423 283 m 415 281 m 407 279 m 399 278 m 391 276 m 383 275 m 375 273 m 367 271 m 359 270 m 351 268 m 341 267 m 331 261 m 319 259 m 307 257 m 297 255 m 289 253 m 283 253 m 277 252 m 275 251 m 273 250 m 271 249 m 270 248 m 268 247 m 266 245 m 264 243 m 258 241 m 252 239 m 244 237 m 238 236 m 236 235 m 235 234 m 234 233 m 232 232 m 231 230 m 229 228 m 223 226 m 221 224 m 215 218 m 209 216 m 203 215 m 201 214 m 199 213 m 198 213 m 197 211 m 196 209 m 194 208 m 193 206 m 192 205 m 191 204 c 191 204)
(change-view (shot11.gif))
(change-cursor normal)
(change-comment "Again, note the types of the new placeholders,
in particular how the type of the IO monad for
the first action matches the type of the function
argument to the second placeholder")
(wait)

(mouse-sequence m 191 205 m 191 206 m 191 207 m 191 208 m 191 214 m 191 215 m 191 217 m 191 218 m 191 219 m 191 220 m 191 221 m 191 222 m 191 230 m 191 231)
(change-view (shot11a.gif))
(wait)

(change-view (shot11.gif))
(mouse-sequence m 192 231 m 193 231 m 194 231 m 195 231 m 196 231 m 197 231 m 198 231 m 200 231 m 202 230 m 204 230 m 205 230 m 206 230 m 207 230 m 208 230 m 209 230 m 211 230 m 212 230 m 213 230 m 214 230 m 216 230 m 222 230 m 223 231)
(change-view (shot11b.gif))
(wait)

(change-comment "We fill in the 'read line' IO action.")
(wait)

(change-view (shot11.gif))
(mouse-sequence m 225 231 m 227 231 m 228 232 m 230 233 m 232 234 m 234 236 m 236 238 m 238 238 m 240 239 m 246 240 m 252 242 m 260 243 m 266 244 m 272 244 m 278 246 m 286 246 m 292 247 m 300 248 m 308 250 m 316 251 m 324 252 m 332 254 m 340 255 m 348 256 m 356 258 m 364 259 m 372 260 m 382 262 m 390 263 m 398 269 m 408 270 m 416 276 m 424 277 m 430 279 m 436 280 m 438 281 m 444 282 m 446 284 m 452 285 m 458 286 m 460 288 m 462 290 m 464 292 m 466 293 m 472 299 m 478 301 m 484 303 m 492 305 m 500 311 m 508 317 m 514 319 m 520 325 m 526 326 m 532 328 m 538 330 m 544 336 m 550 338 m 556 340 m 562 346 m 568 347 m 570 349 m 572 351 m 574 352 m 576 354 m 582 356 m 588 362 m 594 363 m 600 365 m 602 367 m 608 368 m 610 370 m 612 370 m 618 372 m 620 374 m 622 374 m 623 376 m 624 377 m 625 378 c 625 378)
(change-cursor grab)
(mouse-sequence m 624 378 m 623 377 m 622 377 m 620 377 m 619 376 m 618 376 m 616 376 m 610 375 m 604 374 m 596 372 m 588 370 m 578 368 m 568 367 m 562 365 m 556 364 m 550 363 m 544 361 m 536 359 m 526 357 m 516 355 m 506 353 m 498 351 m 490 350 m 482 348 m 474 346 m 466 344 m 456 342 m 446 340 m 436 339 m 426 333 m 416 332 m 408 326 m 398 324 m 388 318 m 378 317 m 368 315 m 360 314 m 352 313 m 346 311 m 340 309 m 334 307 m 328 305 m 320 299 m 310 293 m 300 291 m 290 285 m 282 284 m 276 284 m 274 282 m 272 281 m 270 280 m 268 278 m 266 277 m 260 276 m 258 270 m 252 268 m 246 266 m 240 260 m 232 258 m 224 252 m 218 252 m 216 251 m 215 250 m 214 249 m 212 248 m 211 247 m 210 245 m 209 245 m 209 244 m 208 242 m 207 240 m 206 239 m 205 237 m 205 236 m 204 236 m 203 236 m 203 235 m 202 234 m 201 233 m 200 233 m 199 232 m 198 231 m 197 231 c 197 231)
(change-view (shot12.gif))
(change-cursor normal)

(change-comment "The remaining placeholder has a function type:
conceptually, the program 'calls' the funtion
passing to it the input read from the previous
IO action.  Since it's a function type, we
make a LAMBDA abstration for it.")
(wait)

(mouse-sequence m 205 234 m 207 234 m 209 236 m 211 242 m 217 244 m 223 246 m 229 252 m 235 253 m 241 259 m 247 260 m 255 266 m 261 267 m 267 273 m 273 275 m 279 277 m 281 279 m 287 281 m 293 283 m 294 285 m 296 287 m 298 293 m 300 299 m 302 301 m 308 307 m 314 313 m 320 315 m 326 321 m 334 329 m 342 335 m 350 341 m 358 343 m 366 349 m 374 351 m 382 357 m 390 363 m 398 365 m 406 367 m 412 369 m 418 375 m 424 376 m 430 382 m 436 383 m 442 385 m 444 387 m 446 389 m 448 389 m 449 390 m 451 396 m 453 397 m 455 398 m 457 400 m 459 401 m 461 403 m 463 404 m 465 405 m 466 406 m 468 406 m 469 407 m 470 408 m 472 410 m 473 412 m 475 414 m 477 420 m 483 422 m 485 424 m 487 430 m 493 431 m 495 432 m 496 432 m 497 432 m 499 433 m 499 434 m 500 434 c 500 434)
(change-view (shot12.gif shot12a.gif))
(mouse-sequence m 500 433 m 500 432 m 500 430 m 500 428 m 501 422 m 502 416 m 503 410 m 505 404 m 507 396 m 513 388 m 515 380 m 517 374 m 523 372 m 525 364 m 527 358 m 529 352 m 530 350 m 532 344 m 533 338 m 535 336 m 536 330 m 542 322 m 548 314 m 554 304 m 562 294 m 570 284 m 578 276 m 586 268 m 594 262 m 600 256 m 608 248 m 614 238 m 622 230 m 628 220 m 636 212 m 642 202 m 648 194 m 654 186 m 660 180 m 662 174 m 668 168 m 676 162 m 682 154 m 690 148 m 696 142 m 702 136 m 708 130 m 714 128 m 716 122 m 718 116 m 720 114 m 721 112 m 721 111 m 721 110 m 721 109 m 722 108 m 723 107 m 725 101 m 731 95 m 737 93 m 738 87 m 740 85 m 741 83 m 742 81 m 743 80 m 744 79 m 744 78 m 745 77 m 745 75 m 746 73 m 747 72 m 747 71 m 747 70 m 747 68 m 748 66 m 748 64 m 748 63 m 749 62 m 749 60 m 749 59 m 749 58 m 749 56 m 749 55 m 749 53 m 750 51 m 750 50 m 750 49 m 750 48 m 750 47 m 750 46 m 750 45 c 760 45)
(change-view (shot12.gif))
(change-cursor grab)
(mouse-sequence m 748 46 m 747 47 m 745 47 m 743 49 m 741 50 m 735 51 m 729 57 m 721 58 m 719 60 m 713 61 m 707 63 m 701 64 m 693 65 m 683 67 m 673 67 m 665 68 m 657 68 m 649 69 m 641 71 m 631 72 m 621 73 m 609 73 m 597 75 m 585 75 m 575 76 m 563 77 m 551 79 m 539 80 m 525 81 m 515 83 m 503 84 m 493 86 m 483 88 m 471 90 m 459 92 m 449 94 m 437 96 m 429 98 m 419 100 m 411 101 m 401 102 m 393 102 m 385 108 m 379 109 m 373 111 m 367 112 m 361 118 m 355 119 m 349 125 m 343 126 m 337 128 m 331 129 m 325 131 m 323 133 m 321 135 m 319 141 m 318 147 m 317 149 m 316 155 m 314 161 m 312 167 m 310 173 m 308 179 m 307 185 m 306 191 m 305 193 m 304 199 m 303 201 m 301 203 m 299 209 m 297 210 m 295 211 m 289 217 m 283 218 m 281 218 m 275 219 m 269 221 m 267 222 m 261 223 m 255 229 m 253 229 m 251 230 m 250 231 m 249 233 c 249 233)
(change-view (shot14.gif))
(change-cursor normal)
(change-comment "Note that the type of the bound variable has
been restricted to '[Char]' ie String, because
that is the type returned by the pervious IO
action.")
(wait)

(mouse-sequence m 249 234 m 249 235 m 249 237 m 249 238 m 249 239 m 249 240 m 248 241 m 248 242 m 248 243 m 248 244 m 247 245 m 247 247 m 247 248 m 247 249 m 247 255 m 247 256 m 247 257 m 247 263)
(change-view (shot14a.gif))
(wait)

(change-view (shot14.gif))
(change-comment "We now fill in the final action, making use of
the bound value.")
(wait)

(mouse-sequence m 248 264 m 249 266 m 251 268 m 253 269 m 254 270 m 256 272 m 257 273 m 263 274 m 265 276 m 271 278 m 279 280 m 285 282 m 287 284 m 293 286 m 295 287 m 297 288 m 303 290 m 305 291 m 311 297 m 317 298 m 323 300 m 329 302 m 337 304 m 343 306 m 351 308 m 359 310 m 367 316 m 373 317 m 379 323 m 385 324 m 391 326 m 397 328 m 405 330 m 413 332 m 421 338 m 427 340 m 435 346 m 443 352 m 449 353 m 455 355 m 461 356 m 467 357 m 473 363 m 475 365 m 481 367 m 487 368 m 493 374 m 501 375 m 507 377 m 513 378 m 515 379 m 521 381 m 522 382 m 528 384 m 530 385 m 536 387 m 542 388 m 548 390 m 554 391 m 560 392 m 566 393 m 568 395 m 574 395 m 575 396 m 577 398 m 579 398 m 579 399 m 581 400 m 582 402 m 584 403 m 585 403 m 586 404 m 587 406 m 589 407 m 590 408 m 591 408 m 593 410 m 594 411 m 596 412 m 598 414 m 599 415 m 601 416 m 603 417 m 604 418 m 605 419 m 606 419 m 607 420 m 608 420 m 610 421 m 610 422 m 611 424 m 612 425 m 613 426 m 614 426 m 614 427 c 614 427)
(change-cursor grab)
(mouse-sequence m 612 427 m 611 426 m 609 426 m 607 426 m 605 425 m 603 424 m 601 423 m 599 421 m 597 420 m 595 418 m 589 416 m 583 410 m 577 408 m 571 406 m 565 405 m 563 403 m 561 401 m 559 400 m 557 398 m 555 397 m 549 391 m 543 385 m 535 379 m 525 373 m 515 365 m 503 363 m 495 361 m 485 355 m 475 353 m 467 351 m 459 349 m 451 347 m 443 345 m 435 343 m 427 341 m 419 335 m 411 333 m 403 331 m 395 329 m 387 327 m 379 325 m 371 323 m 363 322 m 357 320 m 351 319 m 349 319 m 347 318 m 346 317 m 345 316 m 344 316 m 343 315 m 342 314 m 340 312 m 338 310 m 332 308 m 330 306 m 324 304 m 322 302 m 320 301 m 318 299 m 316 298 m 315 296 m 313 295 m 312 293 m 311 291 m 309 290 m 307 284 m 301 282 m 295 276 m 289 274 m 283 272 m 277 271 m 276 270 m 275 270 m 274 269 m 273 263 m 273 261 m 271 259 m 271 258 m 269 256 m 268 255 m 268 254 m 267 254 c 267 254)
(change-view (shot15.gif))
(change-cursor normal)
(mouse-sequence m 267 256 m 267 258 m 268 260 m 268 261 m 269 269 m 270 271 m 272 277 m 273 283 m 274 291 m 276 297 m 278 305 m 280 313 m 286 321 m 288 329 m 294 337 m 300 345 m 302 353 m 308 361 m 310 369 m 312 371 m 318 379 m 324 387 m 330 395 m 336 403 m 344 411 m 352 419 m 360 427 m 368 435 m 376 441 m 382 449 m 388 455 m 394 461 m 402 467 m 410 475 m 418 483 m 426 491 m 434 499 m 442 507 m 450 513 m 458 521 m 466 527 m 472 529 m 478 535 m 480 536 m 482 538 m 484 539 m 485 540 m 486 540 m 487 541 m 493 543 m 494 544 m 496 546 m 498 548 m 500 548 m 502 550 m 504 551 m 506 552 m 512 553 m 518 555 m 524 556 m 530 558 m 536 560 m 542 561 m 544 562 m 545 562 m 546 563 m 547 563 m 548 564 m 550 570 m 551 571 m 552 572 m 553 573 m 554 574 m 556 580 m 557 581 m 559 582 m 560 584 m 561 585 m 562 586 c 562 586)
(change-view (shot17.gif))
(mouse-sequence m 562 585 m 562 583 m 562 581 m 563 575 m 564 569 m 565 563 m 566 557 m 567 551 m 568 545 m 569 543 m 569 537 m 570 535 m 571 533 m 572 525 m 574 517 m 576 509 m 578 501 m 580 495 m 581 489 m 583 487 m 584 481 m 586 479 m 587 473 m 589 471 m 591 469 m 592 463 m 594 457 m 596 451 m 597 445 m 598 437 m 599 429 m 599 423 m 599 417 m 599 411 m 600 405 m 602 397 m 603 391 m 605 389 m 605 383 m 607 377 m 607 369 m 609 367 m 610 361 m 611 355 m 612 354 m 612 353 m 613 351 m 614 350 m 615 348 m 616 346 m 617 340 m 618 338 m 619 336 m 620 335 m 621 334 m 622 332 m 623 331 m 624 329 m 625 328 m 625 327 m 626 326 m 627 324 m 628 323 m 629 321 m 630 320 m 631 319 m 631 318 m 632 316 m 632 315 m 632 314 m 632 312 m 633 311 m 633 310 m 634 308 m 635 307 m 636 306 m 637 304 m 638 302 m 639 300 m 640 299 m 641 299 c 641 299)
(change-cursor grab)
(mouse-sequence m 639 299 m 637 299 m 631 299 m 625 299 m 617 299 m 609 298 m 599 298 m 589 297 m 579 297 m 569 296 m 559 296 m 549 295 m 539 295 m 529 295 m 517 295 m 505 295 m 495 295 m 485 294 m 475 294 m 465 294 m 455 293 m 447 293 m 437 293 m 431 292 m 423 292 m 415 292 m 407 292 m 399 292 m 391 292 m 383 292 m 375 292 m 369 292 m 363 292 m 357 292 m 351 292 m 345 292 m 343 291 m 337 291 m 331 291 m 329 290 m 323 290 m 321 290 m 315 289 m 313 289 m 311 289 m 309 289 m 307 289 m 305 289 m 303 289 m 301 289 m 299 288 m 297 288 m 295 288 m 293 288 m 291 288 m 289 288 m 288 288 m 287 288 m 286 288 m 285 288 m 284 287 m 283 287 m 282 287 m 281 287 m 280 287 m 279 287 m 278 287 m 277 287 c 277 287)
(change-view (shot18.gif))
(change-cursor normal)
(mouse-sequence m 278 287 m 279 289 m 281 290 m 283 296 m 285 297 m 287 305 m 293 307 m 295 313 m 301 321 m 307 327 m 315 335 m 323 343 m 331 349 m 339 357 m 347 365 m 357 373 m 367 381 m 375 389 m 383 397 m 391 405 m 399 413 m 405 421 m 413 429 m 419 437 m 427 445 m 435 453 m 443 459 m 449 465 m 457 471 m 463 477 m 469 483 m 475 485 m 483 491 m 489 493 m 491 499 m 493 500 m 495 502 m 497 503 m 499 504 m 501 505 m 503 507 m 505 508 m 507 510 m 509 511 m 511 512 m 513 514 m 515 515 m 521 516 m 523 518 m 525 519 m 531 520 m 533 522 m 539 524 m 541 530 m 543 531 m 545 533 m 547 535 m 549 537 m 551 538 m 552 540 m 554 542 m 556 544 m 562 546 m 568 552 m 570 554 m 572 560 m 574 562 m 576 564 m 578 566 m 579 568 m 581 569 m 582 571 m 584 573 m 586 575 m 588 576 m 590 578 m 592 579 m 594 580 m 596 581 m 598 583 m 600 585 m 602 587 m 604 588 m 606 589 m 607 590 m 609 591 m 610 592 m 612 593 m 614 594 m 615 596 m 617 596 m 618 597 m 619 599 m 620 599 m 620 600 m 621 601 m 623 607 m 625 608 m 627 610 m 629 612 m 631 613 m 633 614 m 639 615 m 640 616 m 641 616 m 642 616 m 643 616 m 644 616 m 645 616 m 646 616 m 647 616 m 649 616 c 649 616)
(change-view (shot19.gif))
(mouse-sequence m 648 615 m 647 615 m 645 615 m 643 615 m 641 615 m 635 615 m 629 615 m 623 615 m 617 615 m 611 615 m 605 615 m 603 614 m 601 614 m 599 614 m 597 614 m 595 613 m 589 613 m 587 613 m 581 613 m 579 612 m 577 612 m 575 612 m 573 612 m 571 612 m 569 612 m 567 612 m 565 612 m 563 612 m 561 612 m 559 612 m 557 612 m 551 612 m 549 612 m 547 612 m 546 612 m 544 612 m 543 612 m 542 612 m 540 612 m 539 612 m 538 612 m 536 612 m 535 612 m 534 612 m 532 612 m 530 612 m 528 612 m 526 612 m 524 613 m 522 613 m 521 613 m 520 613 m 519 613 m 518 613 c 518 613)
(change-cursor grab)
(mouse-sequence m 517 613 m 516 612 m 514 611 m 512 609 m 510 607 m 504 601 m 498 593 m 490 587 m 484 579 m 478 573 m 472 567 m 466 561 m 460 555 m 454 549 m 448 543 m 442 535 m 434 527 m 428 519 m 422 513 m 416 507 m 414 501 m 408 495 m 400 489 m 394 481 m 386 473 m 378 467 m 370 459 m 364 451 m 358 449 m 352 443 m 346 435 m 340 429 m 332 421 m 326 413 m 320 411 m 314 405 m 308 399 m 306 393 m 300 391 m 294 385 m 292 383 m 290 377 m 288 375 m 286 373 m 285 372 m 284 370 m 284 368 m 282 362 m 282 356 m 281 354 m 280 352 m 280 351 m 280 349 m 280 347 m 279 345 m 279 343 m 279 341 m 279 339 m 279 337 m 279 335 m 279 333 m 279 331 m 278 329 m 277 327 m 276 325 m 275 323 m 273 323 m 273 322 m 272 320 m 271 319 m 270 318 m 269 317 m 268 316 m 267 315 m 267 314 m 266 314 c 266 314)
(change-view (shot20.gif))
(change-cursor normal)
(mouse-sequence m 266 312 m 266 311 m 266 310 m 266 308 m 266 307 m 266 306 m 266 304 m 266 303 m 265 302 m 265 300 m 265 299 m 265 298 m 264 296 m 264 295 m 264 294 m 263 292 m 263 291 m 262 290 m 261 288 m 261 287 m 260 286 m 260 284 m 259 283 m 258 282 m 257 280 m 256 279 m 255 278 m 255 276 m 254 275 m 253 274 m 252 272 m 251 271 m 250 270 m 250 268 m 249 267 m 249 266 m 249 265 m 249 264 m 249 263 m 249 262 m 249 260 m 249 259 m 248 258 m 248 257 c 248 257)
(change-cursor grab)
(mouse-sequence m 248 258 m 248 259 m 250 265 m 251 266 m 252 268 m 254 270 m 255 272 m 257 272 m 258 273 m 260 274 m 262 280 m 268 282 m 270 284 m 272 285 m 274 287 m 276 288 m 278 290 m 280 292 m 282 293 m 284 294 m 286 296 m 288 297 m 290 299 m 292 300 m 293 300 m 294 300 m 294 301 m 295 301 m 296 307 m 297 307 m 298 308 m 299 308 m 301 309 m 302 310 m 303 310 m 304 310 m 306 312 m 308 313 m 310 313 m 311 313 m 312 313 m 313 314 m 314 314 m 316 314 m 318 314 m 320 315 m 321 315 m 322 315 m 324 315 m 325 315 c 325 315)
(change-view (shot21.gif))
(change-cursor normal)

(change-comment "The VFPE interpreter does not currently support IO
operations.  We can, however, export this program
as Haskell code and test it that way.")
(wait)

(change-comment "The Haskell export feature works by simply taking
a self-contained (ie containing no free variables)
LET expression and making each of its bindings a
top-level binding in the output program.")
(wait)

(mouse-sequence m 321 310 m 319 309 m 317 307 m 311 305 m 309 297 m 303 289 m 297 279 m 291 269 m 285 261 m 279 253 m 273 243 m 265 233 m 255 225 m 247 215 m 239 207 m 233 201 m 227 195 m 225 193 m 224 191 m 223 190 m 222 188 m 221 186 m 220 180 m 218 178 m 217 172 m 217 171 m 216 169 m 216 167 m 215 161 m 214 155 m 214 153 m 213 147 m 213 145 m 213 143 m 213 141 m 213 140 m 212 139 m 212 138 m 211 136 m 210 135 m 209 133 m 208 131 m 207 129 m 207 128 m 206 127 m 205 126 m 205 124 m 204 123 m 203 121 m 202 119 m 202 117 m 201 116 m 201 115 m 201 114 m 200 112 m 200 111 m 199 110 m 199 108 m 198 107 m 198 106 m 198 104 m 198 103 m 198 102 c 198 102)
(change-view (shot22.gif))
(mouse-sequence m 199 102 m 200 102 m 201 102 m 202 102 m 204 102 m 210 103 m 216 103 m 222 104 m 230 106 m 238 107 m 246 109 m 254 110 m 262 111 m 270 112 m 278 113 m 286 114 m 294 114 m 302 115 m 310 116 m 318 117 m 326 117 m 334 117 m 342 117 m 352 118 m 362 119 m 372 121 m 382 122 m 392 123 m 402 123 m 412 125 m 420 125 m 430 126 m 438 126 m 446 127 m 454 128 m 462 128 m 470 128 m 478 128 m 486 129 m 494 129 m 500 130 m 508 130 m 516 130 m 522 130 m 528 130 m 534 130 m 536 131 m 538 131 m 540 131 m 542 131 m 544 132 m 546 132 m 548 133 m 550 133 m 556 139 m 562 140 m 564 140 m 570 140 m 572 140 m 574 140 m 575 140 m 577 140 m 578 140 m 580 140 m 582 140 m 584 140 m 585 140 m 584 140 c 584 140)
(change-cursor grab)
(mouse-sequence m 584 141 m 584 147 m 584 148 m 584 150 m 584 152 m 584 154 m 584 156 m 584 158 m 584 160 m 584 161 m 583 167 m 583 168 m 583 174 m 583 180 m 583 181 m 582 183 m 582 185 m 582 187 m 582 189 m 581 190 m 581 191 m 581 197 m 581 199 m 581 201 m 581 203 m 581 204 m 581 210 m 581 211 m 581 212 m 581 213 m 581 215 m 581 216 m 581 217 m 581 218 m 581 219 m 581 221 m 581 222 m 581 223 m 581 224 m 581 230 c 581 230)
(change-cursor normal)
(change-view (shot21.gif shot21a.gif))
(mouse-sequence m 577 231 m 579 231 m 581 231 m 583 231 m 585 231 m 587 231 m 589 231 m 591 231 m 593 231 m 599 231 m 601 231 m 603 231 m 605 231 m 607 231 m 609 231 m 611 231 m 613 231 m 615 231 m 617 231 m 623 231 m 629 231 m 635 231 m 643 231 m 649 231 m 657 231 m 665 231 m 673 231 m 681 231 m 689 231 m 697 231 m 703 231 m 711 231 m 719 231 m 725 231 m 731 231 m 737 231 m 743 231 m 749 231 m 755 230 m 761 229 m 767 229 m 769 228 m 771 228 m 773 227 m 775 227 m 776 227 m 777 227 m 778 227 m 779 227 m 780 227 m 782 227 m 783 226 m 784 226 m 785 226 m 786 225 m 787 225 m 788 225 m 790 225 m 791 225 m 792 224 m 793 224 m 794 224 m 795 224 m 796 224 m 797 224 m 798 224 m 799 224 c 799 224)
(change-view (shot21.gif shot21b.gif))
(mouse-sequence m 805 224 m 811 223 m 817 222 m 819 222 m 821 222 m 823 222 m 824 222 m 825 222 m 827 222 m 829 222 m 831 222 m 833 222 m 835 222 m 836 222 m 837 222 m 838 222 m 840 222 m 842 221 m 848 221 m 854 221 m 862 221 m 870 221 m 878 221 m 886 221 m 894 221 m 902 221 m 908 221 m 914 221 m 920 221 m 922 221 m 924 222 m 926 222 m 927 222 m 928 222 m 929 222 m 930 222 m 931 222 m 933 222 m 935 222 m 936 222 m 937 222 m 938 222 m 939 222 m 941 222 m 943 222 m 945 222 m 947 222 m 949 222 m 951 222 m 953 222 m 959 222 m 965 222 m 967 222 m 969 222 m 970 222 c 970 222)
(change-view (shot21.gif))
(change-comment "If GHC is installed this can be tested by changing
to the output diretory and running:

  >ghc iotest.hs
  >./a.out
")
(wait)

(change-comment "With HUGS:

  >runhugs iotest.hs
")
(wait)

(change-comment "That concludes this example.")

)
